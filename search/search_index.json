{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"PlotSquared Documentation","text":""},{"location":"#get-plotsquared","title":"Get PlotSquared","text":"<ul> <li>Download PlotSquared</li> <li>Our support discord is available at https://discord.gg/intellectualsites</li> </ul>"},{"location":"bypass-permissions/","title":"Bypass Permissions","text":""},{"location":"bypass-permissions/#21-event-bypass","title":"2.1. Event bypass","text":"<p>Bypass destroy and build needs \"plots.admin.interact.other\" to function.</p> <ul> <li>plots.admin.build.road</li> <li>plots.admin.build.unowned</li> <li>plots.admin.build.other</li> <li>plots.admin.destroy.road</li> <li>plots.admin.destroy.unowned</li> <li>plots.admin.destroy.other</li> <li>plots.admin.destroy.groundlevel</li> <li>plots.admin.interact.road</li> <li>plots.admin.interact.unowned</li> <li>plots.admin.interact.other</li> <li>plots.admin.vehicle.break.road</li> <li>plots.admin.vehicle.break.unowned</li> <li>plots.admin.vehicle.break.other</li> <li>plots.admin.projectile.road</li> <li>plots.admin.projectile.unowned</li> <li>plots.admin.projectile.other</li> <li>plots.admin.pve.road</li> <li>plots.admin.pve.unowned</li> <li>plots.admin.pve.other</li> <li>plots.admin.entry.denied</li> <li>plots.admin.chat.bypass</li> </ul>"},{"location":"bypass-permissions/#22-command-bypass","title":"2.2. Command bypass","text":"<ul> <li>plots.admin.command.schematic</li> <li>plots.admin.command.schematic.paste</li> <li>plots.admin.command.schematic.save</li> <li>plots.admin.command.clear</li> <li>plots.admin.command.continue</li> <li>plots.admin.command.add</li> <li>plots.admin.command.deny</li> <li>plots.admin.command.done</li> <li>plots.admin.command.kick</li> <li>plots.admin.command.merge</li> <li>plots.admin.command.reload</li> <li>plots.admin.command.load</li> <li>plots.admin.command.download</li> <li>plots.admin.command.chat</li> <li>plots.admin.command.save</li> <li>plots.admin.command.setowner</li> <li>plots.admin.command.setup</li> <li>plots.admin.command.swap</li> <li>plots.admin.command.trust</li> <li>plots.admin.command.untrust</li> <li>plots.admin.command.unlink</li> <li>plots.admin.command.update</li> <li>plots.admin.command.delete</li> <li>plots.admin.command.autoclear</li> <li>plots.admin.command.remove</li> <li>plots.admin.command.blocked-cmds.shared</li> <li>plots.admin.command.blocked-cmds.other</li> <li>plots.admin.alias.remove</li> <li>plots.admin.alias.set</li> </ul>"},{"location":"bypass-permissions/#23-flag-bypass","title":"2.3. Flag bypass","text":"<ul> <li>plots.flag.notify-leave.bypass</li> <li>plots.flag.notify-enter.bypass</li> <li>plots.gamemode.bypass</li> </ul>"},{"location":"bypass-permissions/#24-misc-bypass","title":"2.4. Misc bypass","text":"<ul> <li>plots.teleport.delay.bypass</li> <li>plots.admin.build.heightlimit</li> </ul>"},{"location":"commands/","title":"Commands","text":""},{"location":"commands/#setowner","title":"SETOWNER","text":"<p>Set the plot owner.</p> <p>Usage: <code>/plot [[world;]X;Z] setowner &lt;player&gt;</code></p> <p>Aliases: <code>[ owner, so, seto ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.admin.command.setowner</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#add","title":"ADD","text":"<p>With this command you \"add him\" to the whitelist of the plot. Allow a user to build in a plot while the plot owner is online.</p> <p>Usage: <code>/plot [[world;]X;Z] add &lt;player | *&gt;</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.add</code> - Access to the command <code>/plot add</code></li> <li><code>plots.add.&lt;amount&gt;</code> - Specifying the amount of people the plot owner can add</li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.add</code> - Administrative override</li> <li><code>plots.add.everyone</code> - Access to add everyone</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#trust","title":"TRUST","text":"<p>Whith this command you \"add him\" to the whitelist of the plot. It gives the added user more permissions as the normal ADD command: it allow a user to build in a plot every time and use WorldEdit while the plot owner is offline.</p> <p>Usage: <code>/plot [[world;]X;Z] trust &lt;player | *&gt;</code></p> <p>Aliases: <code>[ t ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.trust</code> - Access to the command <code>/plot trust</code></li> <li><code>plots.trust.&lt;amount&gt;</code> - Specifying the amount of people the plot owner can trust</li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.trust</code> - Administrative override</li> <li><code>plots.trust.everyone</code> - Access to trust everyone</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#remove","title":"REMOVE","text":"<p>Remove a player from a plot. This include the player whitelist (ADD, TRUST) and the blacklist (DENY) of the plot.</p> <p>Usage: <code>/plot [[world;]X;Z] remove &lt;player | *&gt;</code></p> <p>Aliases: <code>[ r, untrust, ut, undeny, ud, unban ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.remove</code> - Access to the command <code>/plot remove</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.remove</code> Administrative override</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#deny","title":"DENY","text":"<p>Deny a user from entering a plot. With this command you \"add him\" to the blacklist of the plot.</p> <p>Usage: <code>/plot [[world;]X;Z] deny &lt;player | *&gt;</code></p> <p>Aliases: <code>[ d, ban ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.deny</code> - Access to the command <code>/plot deny</code></li> <li><code>plots.deny.&lt;amount&gt;</code> - Specifying the amount of people the plot owner can deny</li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.deny</code> - Administrative override</li> <li><code>plots.admin.entry.denied</code> - Administrative override to bypass plot deny</li> <li><code>plots.deny.everyone</code> - Access to deny everyone</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#grant","title":"GRANT","text":"<p>Manage plot grants.</p> <p>Usage: <code>/plot grant &lt;check | add&gt; [player]</code></p> <p>Permissions:</p> <ul> <li><code>plots.grant</code> - Access to the command <code>/plot grant</code></li> <li><code>plots.grant.add</code> - Access to the command <code>/plot grant add</code></li> <li><code>plots.grant.check</code> - Access to the command <code>/plot grant check</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#kick","title":"KICK","text":"<p>Kick a player from your plot.</p> <p>Usage: <code>/plot [[world;]X;Z] kick &lt;player | *&gt;</code></p> <p>Aliases: <code>[ k ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.kick</code> - Access to the command <code>/plot kick</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.kick</code> - Administrative override</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#merge","title":"MERGE","text":"<p>Merge the plot you are standing on with another plot.</p> <p>Usage: <code>/plot [[world;]X;Z] merge &lt;all | n | e | s | w&gt; [removeroads]</code></p> <p>Aliases: <code>[ m ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.merge</code> - Access to the command <code>/plot claim</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.merge.&lt;amount&gt;</code> - Limit the amount of plots a player can merge to a mega plot</li> <li><code>plots.admin.command.merge</code> - Administrative override</li> <li><code>plots.merge.other</code> - Access to merge the plot with other people</li> <li><code>plots.merge.keeproad</code> - Access to use the keeproad argument</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#unlink","title":"UNLINK","text":"<p>Unlink a mega-plot (merged plot)</p> <p>Usage: <code>/plot [[world;]X;Z] unlink [createroads]</code></p> <p>Aliases: <code>[ u, unmerge ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.unlink</code> - Access to the command <code>/plot unlink</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.unlink</code> - Administrative override</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#sethome","title":"SETHOME","text":"<p>Set the plot-home you\u2019re standing on. The plothome is the position where the player will teleported if he use the <code>/plot home</code> or <code>/plot visit</code> command. With the argument <code>none</code> you reset the position.</p> <p>Usage: <code>/plot [[world;]X;Z] set home [none]</code></p> <p>Aliases: <code>[ sh, seth, sethome ]</code></p> <p>Permissions:</p> <ul> <li><code>plots.set.home</code> - Access to the command <code>/plot set home</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#alias","title":"ALIAS","text":"<p>Set the plot name</p> <p>Usage:</p> <ul> <li><code>/plot [[world;]X;Z] alias set &lt;alias&gt;</code></li> <li><code>/plot [[world;]X;Z] alias remove &lt;alias&gt;</code></li> </ul> <p>Aliases: <code>[ setalias, sa, name, rename, setname, seta, nameplot ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.alias.set</code> - Access to the command <code>/plot alias set</code></li> <li><code>plots.alias.remove</code> - Access to the command <code>/plot alias remove</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.alias.set</code> - Administrative override to set an alias</li> <li><code>plots.admin.alias.remove</code> - Administrative override to remove an alias</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#setdescription","title":"SETDESCRIPTION","text":"<p>Set the plot description</p> <p>Usage: <code>/plot [[world;]X;Z] desc &lt;description&gt;</code></p> <p>Aliases: <code>[ setdescription, setdesc, setd, description ]</code></p> <p>Permissions: <code>plots.set.desc</code> - Access to the command <code>/plot set description</code></p> <p>Source Code: here</p>"},{"location":"commands/#music","title":"MUSIC","text":"<p>Player music in a plot</p> <p>Usage: <code>/plot [[world;]X;Z] music</code></p> <p>Permissions: <code>plots.music</code> - Access to the command <code>/plot music</code></p> <p>Source Code: here</p>"},{"location":"commands/#setbiome","title":"SETBIOME","text":"<p>List all possible biomes or change the plot biome. (You can change the biome with WorldEdit / FAWE too.) If you clear or delete the plot, you reset the biom setting too, so the default biome (changeable in the <code>worlds.yml</code>) will be used.</p> <p>Usage: <code>/plot [[world;]X;Z] biome [biome]</code></p> <p>Aliases: <code>[ biome, sb, setb, b ]</code></p> <p>Permissions: <code>plots.set.biome</code> - Access to the command <code>/plot set biome</code></p> <p>Source Code: here</p>"},{"location":"commands/#setflag","title":"SETFLAG","text":"<p>Manage plot flags.</p> <p>Usage:</p> <p>Primary:</p> <ul> <li><code>/plot [[world;]X;Z] flag</code></li> </ul> <p>Secondary:</p> <ul> <li><code>/plot [[world;]X;Z] flag info &lt;flag&gt;</code></li> <li><code>/plot [[world;]X;Z] flag set &lt;flag&gt; &lt;value&gt;</code></li> <li><code>/plot [[world;]X;Z] flag add &lt;flag&gt; &lt;values&gt;</code></li> <li><code>/plot [[world;]X;Z] flag remove &lt;flag&gt; [values]</code></li> </ul> <p>Aliases: <code>[ f, flag ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.flag</code> - Access to the command <code>/plot flag</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.set.flag</code> - Access to the command <code>/plot set flag</code></li> <li><code>plots.flag.remove</code> - Access to the command <code>/plot flag remove</code></li> <li><code>plots.flag.add</code> - Access to the command <code>/plot flag add</code></li> <li><code>plots.set.flag.other</code> - Access to set flag on other people\u2019s plots</li> <li><code>plots.set.flag.&lt;arg&gt;</code> - Access to the command <code>/plot set flag &lt;arg&gt;</code></li> <li><code>plots.flag.list</code> - Access to the command <code>/plot flag list</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#done","title":"DONE","text":"<p>Mark a plot as done</p> <p>Usage: <code>/plot [[world;]X;Z] done</code></p> <p>Aliases: <code>[ submit ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.done</code> - Access to the command <code>/plot done</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.done</code> - Administrative override</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#continue","title":"CONTINUE","text":"<p>Continue a plot that was previously marked as done</p> <p>Usage: <code>/plot [[world;]X;Z] continue</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.continue</code> - Access to the command <code>/plot continue</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.continue</code> - Administrative override</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#toggle","title":"TOGGLE","text":"<p>Toggle per user settings</p> <p>Usage: <code>/plot [[world;]X;Z] toggle &lt;chat | chatspy | clear-confirmation | time | titles | worldedit&gt;</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.use</code> - Access to the command <code>/plot toggle</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.chat</code> - Access to the command <code>/plot toggle chat-spy</code></li> <li><code>plots.worldedit.bypass</code> - Access to the command <code>/plot wea</code></li> <li><code>plots.toggle.chat</code> - Access to the command <code>/plot chat</code></li> <li><code>plots.admin.command.autoclear</code> - Access to the command <code>/plot toggle clear-confirmation</code></li> <li><code>plots.toggle.titles</code> - Access to the command <code>/plot toggle titles</code></li> <li><code>plots.toggle.time</code> - Access to the command <code>/plots toggle time</code></li> <li><code>plots.toggle.debug</code> - Access to the command <code>/plots toggle debug</code></li> <li><code>plots.admin.debug.other</code> - Administrative override to toggle the debugmode for other players</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#set","title":"SET","text":"<p>Set a plot value</p> <p>Usage: <code>/plot [[world;]X;Z] set &lt;biome | alias | home | floor | wall | all | air | main | middle | outline | border&gt; &lt;value...&gt;</code></p> <p>Aliases: <code>[ s ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.set</code> - Access to the command <code>/plot set</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.set.\" + &lt;component&gt;</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#copy","title":"COPY","text":"<p>Copy a plot.</p> <p>Usage: <code>/plot [[world;]X;Z] copy &lt;X;Z&gt;</code></p> <p>Aliases: <code>[ copypaste ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.copy</code> - Access to the command <code>/plot copy</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#move","title":"MOVE","text":"<p>Move a plot.</p> <p>Usage: <code>/plot [[world;]X;Z] move &lt;X;Z&gt;</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.move</code> - Access to the command <code>/plot move</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#swap","title":"SWAP","text":"<p>Swap two plots.</p> <p>Usage: <code>/plot [[world;]X;Z] swap &lt;X;Z&gt;</code></p> <p>Aliases: <code>[ switch ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.swap</code> - Access to the command <code>/plot swap</code></li> </ul> <p>Source Code: here</p>"},{"location":"commands/#backup","title":"BACKUP","text":"<p>Manage plot backups</p> <p>Usage: <code>/plot [[world;]X;Z] backup &lt;save | list | load&gt;</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.backup</code> - Access to the command <code>/plot backup</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.backup.save</code> - Access to the command <code>/plot backup save</code></li> <li><code>plots.backup.load</code> - Access to the command <code>/plot backup load</code></li> <li><code>plots.backup.list</code> - Access to the command <code>/plot backup list</code></li> <li><code>plots.admin.backup.other</code> - Administrative override to manage backups at other plots</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#clear","title":"CLEAR","text":"<p>Clear the plot you stand on. It doesn\u2019t reset any plot settigns or flag (with exception of the biome setting).</p> <p>Usage: <code>/plot [[world;]X;Z] clear</code></p> <p>Aliases: <code>[ reset ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.clear</code> - Access to the command <code>/plot clear</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.clear</code> - Administrative override</li> </ul> <p>Source Code: here</p>"},{"location":"commands/#delete","title":"DELETE","text":"<p>Delete the plot you stand on.</p> <p>Usage: <code>/plot [[world;]X;Z] delete</code></p> <p>Aliases: <code>[ dispose, del ]</code></p> <p>Permissions:</p> <p>Primary:</p> <ul> <li><code>plots.delete</code> - Access to the command <code>/plot delete</code></li> </ul> <p>Secondary:</p> <ul> <li><code>plots.admin.command.delete</code> - Administrative override to delete plots.</li> </ul> <p>Source Code: here</p>"},{"location":"permission-packs/","title":"Permission Packs","text":""},{"location":"permission-packs/#21-plotspermpackbasic","title":"2.1. plots.permpack.basic","text":"<ul> <li>plots.use</li> <li>plots.info</li> <li>plots.claim</li> <li>plots.auto</li> <li>plots.home</li> <li>plots.clear</li> <li>plots.delete</li> <li>plots.list</li> <li>plots.list.mine</li> <li>plots.list.shared</li> <li>plots.list.world</li> <li>plots.list.all</li> <li>plots.list.forsale</li> <li>plots.list.unowned</li> <li>plots.list.unknown</li> <li>plots.set</li> <li>plots.visit</li> <li>plots.visit.owned</li> <li>plots.visit.shared</li> <li>plots.set.flag</li> <li>plots.flag.add</li> <li>plots.flag.remove</li> <li>plots.flag.list</li> <li>plots.flag.info</li> <li>plots.flag</li> <li>plots.buy</li> <li>plots.chat</li> <li>plots.confirm</li> <li>plots.toggle</li> <li>plots.toggle.titles</li> <li>plots.toggle.chat</li> <li>plots.set.biome</li> <li>plots.set.home</li> <li>plots.merge</li> <li>plots.merge.other</li> <li>plots.merge.4</li> <li>plots.unlink</li> <li>plots.denied</li> <li>plots.add</li> <li>plots.trust</li> <li>plots.deny</li> <li>plots.remove</li> <li>plots.untrust</li> <li>plots.undeny</li> <li>plots.kick</li> <li>plots.download</li> <li>plots.save</li> <li>plots.done</li> <li>plots.continue</li> <li>plots.middle</li> </ul>"},{"location":"permission-packs/#22-plotspermpackbasicflags","title":"2.2. plots.permpack.basicflags","text":"<ul> <li>plots.set.flag</li> <li>plots.flag</li> <li>plots.flag.add</li> <li>plots.flag.remove</li> <li>plots.flag.list</li> <li>plots.flag.info</li> <li>plots.set.flag.titles.*</li> <li>plots.set.flag.greeting.*</li> <li>plots.set.flag.farewell.*</li> <li>plots.set.flag.notify-enter.*</li> <li>plots.set.flag.notify-leave.*</li> <li>plots.set.flag.feed.*</li> <li>plots.set.flag.heal.*</li> <li>plots.set.flag.invincible.*</li> <li>plots.set.flag.instabreak.*</li> <li>plots.set.flag.fly.*</li> <li>plots.set.flag.gamemode</li> <li>plots.set.flag.gamemode.creative</li> <li>plots.set.flag.gamemode.survival</li> <li>plots.set.flag.gamemode.adventure</li> <li>plots.set.flag.time.*</li> <li>plots.set.flag.weather.*</li> <li>plots.set.flag.music.*</li> <li>plots.set.flag.disable-physics.*</li> <li>plots.set.flag.pve.*</li> <li>plots.set.flag.pvp.*</li> <li>plots.set.flag.explosion.*</li> <li>plots.set.flag.hostile-interact.*</li> <li>plots.set.flag.hostile-attack.*</li> <li>plots.set.flag.player-interact.*</li> <li>plots.set.flag.animal-interact.*</li> <li>plots.set.flag.animal-attack.*</li> <li>plots.set.flag.tamed-interact.*</li> <li>plots.set.flag.tamed-attack.*</li> <li>plots.set.flag.misc-interact.*</li> <li>plots.set.flag.hanging-place.*</li> <li>plots.set.flag.hanging-break.*</li> <li>plots.set.flag.vehicle-use.*</li> <li>plots.set.flag.vehicle-place.*</li> <li>plots.set.flag.vehicle-break.*</li> <li>plots.set.flag.place.*</li> <li>plots.set.flag.break.*</li> <li>plots.set.flag.use.*</li> <li>plots.set.flag.forcefield.*</li> <li>plots.set.flag.price.*</li> <li>plots.set.flag.no-worldedit.*</li> </ul>"},{"location":"permission-packs/#23-plotspermpackbasicinbox","title":"2.3. plots.permpack.basicinbox","text":"<ul> <li>comments.notifications.enabled</li> <li>plots.inbox.modify.public</li> <li>plots.inbox.write.public</li> <li>plots.inbox.read.public</li> <li>plots.inbox.read.report</li> <li>plots.inbox.write.report</li> <li>plots.inbox.modify.owner</li> <li>plots.inbox.write.owner</li> <li>plots.inbox.read.owner</li> <li>plots.comment</li> <li>plots.inbox</li> </ul>"},{"location":"placeholders/","title":"Placeholders","text":"<p>Available placeholders in 6.0.0 onwards:</p> Placeholder Description <code>%plotsquared_currentplot_alias%</code> Alias of the plot <code>%plotsquared_currentplot_owner%</code> Owner of the plot <code>%plotsquared_currentplot_members%</code> Amount of players added and trusted to the plot <code>%plotsquared_currentplot_members_added%</code> Amount of players added to the plot <code>%plotsquared_currentplot_members_added_list%</code> Display a list of added members <code>%plotsquared_currentplot_members_trusted%</code> Amount of players trusted to the plot <code>%plotsquared_currentplot_members_trusted_list%</code> Display a list of trusted members <code>%plotsquared_currentplot_members_denied%</code> Amount of members denied from the plot <code>%plotsquared_currentplot_members_denied_list%</code> Display a list of denied members <code>%plotsquared_currentplot_world_name%</code> Get the world name <code>%plotsquared_currentplot_can_build%</code> Displays true or false whether the player has build rights on the plot <code>%plotsquared_world_name%</code> Get the name of the world <code>%plotsquared_has_plot%</code> Displays true or false whether the player has plot <code>%plotsquared_has_plot_(world)%</code> Displays true or false whether the player has plot in a specific world <code>%plotsquared_plot_count%</code> Amount of global plots of a player <code>%plotsquared_plot_count_(World)%</code> Amount of plots for a player in a specific world <code>%plotsquared_allowed_plot_count%</code> Amount of maximum plots a player can have. Returns \"infinite\" if you have * permission <code>%plotsquared_currentplot_xy%</code> Displays the X and Y ID of a plot <code>%plotsquared_currentplot_x%</code> Displays the X ID of a plot <code>%plotsquared_currentplot_y%</code> Displays the Y ID of a plot <code>%plotsquared_currentplot_rating%</code> Displays the average rating of a plot <code>%plotsquared_currentplot_biome%</code> Displays the biome of a plot <code>%plotsquared_currentplot_localflag_&lt;flag&gt;%</code> Display the value of the flag set on current plot <code>%plotsquared_currentplot_flag_&lt;flag&gt;%</code> Display the value of the flag set on current plot or if it\u2019s not set: display the inherited flag value (worlds.yml) <code>%plotsquared_currentplot_creationdate%</code> Display the creation date of the plot"},{"location":"plot-backups/","title":"Plot Backups","text":"<p>PlotSquared v5.11.0 introduced a new plot backup system. This allows you to create backups of your plots, which can be restored at a later point.</p> <p>The system does (currently) not work for merged plots.</p> <p>By default, the system will also create backups of the plot when certain potentially destructive actions are performed. These currently include:</p> <ul> <li>Clearing the plot</li> <li>Setting a plot component (floor, filling, etc)</li> </ul> <p>The backup system currently only stores blocks inside the plot, and will not include things such as flags, settings, etc. The backup system uses plot schematics behind the scenes.</p>"},{"location":"plot-component-presets/","title":"Plot component presets","text":""},{"location":"plot-component-presets/#introduction","title":"Introduction","text":"<p>PlotSquared v5.12.0 introduced a new component preset system. The new system allows server owners to make component presets that players can then apply to their plots via a GUI. The GUI menu overrides player specific permissions. Thus, you can use the GUI to let players use components that they\u2019re not normally permitted to use.</p>"},{"location":"plot-component-presets/#components","title":"Components","text":"<p>The components available - and the values you can use - are the same as those in the <code>/plot set &lt;component&gt;</code> command.</p> <p>Available components:</p> <ul> <li>floor</li> <li>wall</li> <li>all</li> <li>air</li> <li>main</li> <li>middle</li> <li>outline</li> <li>border</li> </ul>"},{"location":"plot-component-presets/#configuration","title":"Configuration","text":"<p>The system is toggled in the <code>settings.yml</code> file under <code>enabled-components</code>. It is enabled by default.</p> <p>Presets are configured in the file <code>plugins/PlotSquared/settings/components.yml</code>:</p> <pre><code>presets:\n- component: floor\ncost: 0.0\npattern: '##wool'\nname: &lt;rainbow:2&gt;Disco Floor&lt;/rainbow&gt;\nicon: yellow_wool\ndescription:\n- &lt;gold&gt;Spice up your plot floor&lt;/gold&gt;\npermission: ''\n</code></pre> <p>This is a powerful system as it allows you to use the power of BlockBuckets to define block-patterns.</p>"},{"location":"plot-component-presets/#cost","title":"Cost","text":"<p>If a non-zero cost is defined and both Vault and an economy plugin is present, the GUI will charge using the in-game currency.</p>"},{"location":"plot-component-presets/#icons","title":"Icons","text":""},{"location":"plot-component-presets/#permission","title":"Permission","text":"<p>The player won\u2019t be able to see presets that they are not permitted to use. If the permission is set to <code>''</code> (an empty string) then all players will be able to use that preset.</p>"},{"location":"plot-component-presets/#plot-components","title":"/plot components","text":"<p>The command for opening the GUI is <code>/plot components</code> and has the permission node <code>plots.components</code>.</p> <p>Using this command will bring up the GUI menu, but only if the player is in a plot that they own.</p> <p></p>"},{"location":"plot-components/","title":"Plot components","text":""},{"location":"plot-components/#plot-set-biome","title":"/plot set biome","text":"<p>This is an alias for <code>/plot setbiome</code> and has the permission node <code>plots.set.biome</code>. From v5.11.0 this has full command completion.</p>"},{"location":"plot-components/#plot-set-alias","title":"/plot set alias","text":"<p>This is an alias for <code>/plot setalias</code> and has the permission node <code>plots.alias</code>. This changes the name of the plot as displayed in lists, and allows you to do <code>/plot visit &lt;alias&gt;</code></p>"},{"location":"plot-components/#plot-set-home","title":"/plot set home","text":"<p>This is an alias for <code>/plot sethome</code> and has the permission node <code>plots.set.home</code>.</p> <p>If no argument is given, the plot home location will be set to your current location. To remove the custom home location use <code>/plot sethome unset/reset/remove/none</code>.</p>"},{"location":"plot-components/#plot-set","title":"/plot set \\ <p>This allows you to update various parts of the plot. The components that exist are:</p> <ul> <li><code>main</code>: Blocks in the area under the plot floor</li> <li><code>floor</code>: Blocks in the plot floor</li> <li><code>air</code>: Blocks in the area above the plot floor</li> <li><code>all</code>: All blocks in a plot</li> <li><code>wall</code>: Blocks inside of plot wall</li> <li><code>border</code>: Blocks in the plot border</li> <li><code>outline</code>: Blocks in the area surrounding the plot</li> <li><code>middle</code>: The block(s) in the middle of the plot</li> </ul> <p>Each component has a separate permission node, namely <code>plots.set.&lt;component&gt;</code>, and they share the syntax <code>/plot set &lt;component&gt; &lt;pattern&gt;</code>.</p> <p>This is a powerful system as it allows you to use the power of BlockBuckets to define block-patterns.</p>","text":""},{"location":"plot-flags/","title":"Plot flags","text":""},{"location":"plot-flags/#introduction","title":"Introduction","text":"<p>The extensive flagging system allows you to do all sorts of things such as setting the plot weather.</p> <p>Setting a flag is easy, just use <code>/plot flag set &lt;flag&gt; &lt;value&gt;</code>. For a boolean flag, the value would either be 'true' or 'false'.</p>"},{"location":"plot-flags/#default-plot-and-road-flags","title":"Default Plot and Road Flags","text":"<p>You can set default flags per world in the <code>plugins/PlotSquared/config/worlds.yml</code>. Default flags will be present in each claimed plot unless a different value is manually set for that plot.</p> <p>The following is an example of setting the <code>use</code> flag to allow interaction with doors, and trapdoors, levers, gates, pressure plates, buttons and trip wires:</p> <pre><code>worlds:\n  &lt;world&gt;:\n    [...]\n    flags:\n      use: \"oak_door,iron_trapdoor,lever,acacia_fence_gate,light_weighted_pressure_plate,oak_button,tripwire\"\n      pvp: true\n</code></pre> <p>`\\` indicates the name of that plotworld. <p>The same works for road flags.</p> <p>Example:</p> <pre><code>worlds:\n  &lt;world&gt;:\n    [...]\n    road:\n      [...]\n      flags:\n        use: \"oak_door,iron_trapdoor,lever,acacia_fence_gate,light_weighted_pressure_plate,oak_button,tripwire\"\n        pvp: true\n</code></pre> <p>`\\` indicates the name of that plotworld."},{"location":"plot-flags/#entity-categories","title":"Entity Categories","text":"<p>Flags such as mob caps, interaction flags, etc, make use of entity categories. PlotSquared divides entities in the following categories:</p> <ul> <li>animal: cod donkey squid skeleton_horse mule trader_llama parrot zombie_horse cow horse bee polar_bear pufferfish cat bat salmon fox pig llama iron_golem turtle tropical_fish sheep snow_golem mooshroom ocelot dolphin chicken wolf panda rabbit</li> <li>hostile: blaze pillager skeleton giant elder_guardian zombie_pigman end_crystal ravager ghast guardian vindicator magma_cube spider creeper wither evoker slime illusioner phantom witch wither_skeleton husk ender_dragon cave_spider stray enderman silverfish endermite vex zombie drowned zombie_villager, shulker</li> <li>player: player</li> <li>projectile: ender_pearl dragon_fireball fireball wither_skull llama_spit fishing_bobber experience_bottle egg arrow small_fireball</li> <li>vehicle: spawner_minecart donkey pig llama furnace_minecart skeleton_horse mule hopper_minecart trader_llama zombie_horse tnt_minecart boat chest_minecart horse command_block_minecart minecart</li> <li>villager: villager wandering_trader snowball spectral_arrow shulker_bullet potion trident</li> <li>hanging: item_frame leash_knot painting</li> <li>other: dragon_fireball tnt experience_orb lightning_bolt fireball wither_skull area_effect_cloud evoker_fangs eye_of_ender armor_stand small_fireball firework_rocket falling_block item</li> <li>tamable: cat trader_llama parrot zombie_horse donkey wolf llama horse skeleton_horse mule</li> </ul>"},{"location":"plot-flags/#blocktypelist","title":"BlockTypeList","text":"Name Description Default Value break Define a list of materials players should be able to break in the plot even when they aren\u2019t added to the plot. None place Define a list of materials players should be able to place in the plot even when they aren\u2019t added to the plot. None use Define a list of materials players should be able to interact with in the plot even when they aren\u2019t added to the plot. None"},{"location":"plot-flags/#boolean","title":"Boolean","text":"Name Description Default Value animal-attack Set to <code>true</code> to allow animals to be attacked in the plot. False animal-interact Set to <code>true</code> to allow animals to be interacted with in the plot. False beacon-effects Set to <code>false</code> to disable beacon effects on the plot. True block-burn Set to <code>true</code> to allow blocks to burn within the plot. False block-ignition Set to <code>false</code> to disallow blocks to ignite within the plot. True chat Set to <code>false</code> to prevent plot chat on the plot. False coral-dry Set to <code>true</code> to allow corals to dry within the plot. False crop-grow Set to <code>false</code> to disable crop growing on the plot. True copper-oxide Set to <code>true</code> to allow copper to oxide within the plot. False deny-exit Set to <code>true</code> to disallow players from exiting the plot. False deny-portal-travel Prevents players from travelling across dimensions by using portals. False deny-portals Prevents players from creating portals of any kind. False device-interact Set to <code>true</code> to allow devices to be interacted with in the plot. False disable-physics Set to <code>true</code> to disable block physics in the plot. False drop-protection Set to <code>true</code> to prevent dropped items from being picked up by non-members of the plot. False entity-change-block Set to <code>true</code> to allow entities to change blocks within the plot, if not covered by other flags. False explosion Set to <code>true</code> to allow explosions inside a plot. False fly Set to <code>true</code> to enable flight within the plot. False forcefield Set to <code>true</code> to enable member forcefield in the plot. False grass-grow Set to <code>false</code> to disable grass to grow within the plot. True hanging-break Set to <code>true</code> to allow guests to break hanging objects in the plot. Applies to the following entity categories: hanging False hanging-place Set to <code>true</code> to allow guests to hang objects in the plot. False hide-info Set to <code>true</code> to hide plot information. False hostile-attack Set to <code>true</code> to enable players to attack hostile mobs in the plot. False hostile-interact Set to <code>true</code> to allow players to interact with hostile mobs in the plot. False ice-form Set to <code>true</code> to allow ice to form in the plot. False ice-melt Set to <code>true</code> to allow ice to melt in the plot. False instabreak Set to <code>true</code> to allow blocks to be instantaneously broken in survival mode. False invincible Set to <code>true</code> to prevent players from taking damage inside the plot. False item-drop Set to <code>false</code> to prevent items from being dropped inside the plot. True keep-inventory Prevents players from dropping their items when they die inside the plot. False kelp-grow Set to <code>false</code> to disable kelp to grow in the plot. True leaf-decay Set to <code>false</code> to prevent leaves from decaying. True lectern-read-book Prevent players taking books from lecterns. False misc-break Set to <code>true</code> to allow guests to break miscellaneous items. Applies to the following entity categories: armorstands False misc-place Set to <code>true</code> to allow guests to place miscellaneous items. False misc-interact Set to <code>true</code> to allow guests to interact with miscellaneous items. Applies to the following entities mob-break Set to <code>true</code> to allow mobs to break blocks within the plot. False mob-place Set to <code>true</code> to allow mobs to place blocks within the plot. False mycel-grow Set to <code>false</code> to disable mycelium to grow in the plot. True no-worldedit Set to <code>true</code> to disable (FastAsync)WorldEdit usage within the plot. False notify-enter Set to <code>true</code> to notify the plot owners when someone enters the plot. False notify-leave Set to <code>true</code> to notify the plot owners when someone leaves the plot. False player-interact Set to <code>true</code> to allow guests to interact with players in the plot. False pve Set to <code>true</code> to enable PVE inside the plot. False pvp Set to <code>true</code> to enable PVP inside the plot. False prevent-creative-copy Prevents people from copying item NBT data in the plot unless they\u2019re added as members. False projectiles Prevents guests from shooting projectiles on the plot when set to false. False redstone Set to <code>false</code> to disable redstone in the plot. True server-plot Set to <code>true</code> to turn the plot into a server plot. This is equivalent to setting the server as the plot owner. False snow-form Set to <code>false</code> to disallow snow to form within the plot. False snow-melt Set to <code>true</code> to allow snow to melt within the plot. True soil-dry Set to <code>true</code> to allow soil to dry within the plot. False tamed-attack Set to <code>true</code> to allow guests to attack tamed animals in the plot. False tamed-interact Set to <code>true</code> to allow guests to interact with tamed animals in the plot. False untrusted-visit Set to <code>false</code> to disallow untrusted players from visiting the plot. True vehicle-break Set to <code>true</code> to allow guests to break vehicles in the plot. False vehicle-place Set to <code>true</code> to allow guests to place vehicles in the plot. False vehicle-use Set to <code>true</code> to allow guests to use vehicles in the plot. Applies to the following entity categories: vehicle False villager-interact Set to <code>true</code> to allow guests to interact with villagers in the plot. False vine-grow Set to <code>false</code> to disable vines to grow within the plot. True"},{"location":"plot-flags/#double","title":"Double","text":"Name Description Default Value price If set a plot can be bought for this price using <code>/plot buy</code>. Requires economy to be enabled and lists plots under <code>/plots list forsale</code>. Not Buyable"},{"location":"plot-flags/#enum","title":"Enum","text":"Name Description Default Value deny-teleport Deny a certain group from teleporting to the plot. Available groups: members, nonmembers, trusted, nontrusted, nonowners None liquid-flow Set to <code>false</code> to disable liquid flowing. None titles Set to <code>true</code> to allow the plot title when someone enters the plot. None weather Specifies the simulated weather inside the plot. This hasn\u2019t an effet of weather dependent game mechanics. None"},{"location":"plot-flags/#integer","title":"Integer","text":"Name Description Default Value animal-cap Set to an integer value to limit the amount of animals on the plot. Applies to the following entity categories: animal, villager, tamable Infinity entity-cap Set to an integer value to limit the amount of entities on the plot. Infinity hostile-cap Set to an integer value to limit the amount of hostile entities on the plot. Applies to the following entity categories: hostile Infinity misc-cap Set to an integer value to limit the amount of miscellaneous entities on the plot. Applies to the following entity categories: projectile, other, hanging Infinity mob-cap Set to an integer value to limit the amount of mobs on the plot. Applies to the following entity categories: animal, villager, tamable, hostile Infinity vehicle-cap Set to an integer value to limit the amount of vehicles on the plot. Applies to the following entity categories: vehicle Infinity time Specifies the simulated time inside the plot. This has no effect of time dependent game mechanics. Disabled"},{"location":"plot-flags/#internal","title":"Internal","text":"Name Description Default Value analysis A multi purpose debug analysis flag. Null done Mark a plot as done. Null"},{"location":"plot-flags/#miscellaneous","title":"Miscellaneous","text":"Name Description Default Value blocked-cmds A list of commands that are blocked in the plot. None gamemode Determines the gamemode in the plot. None guest-gamemode Determines the guest gamemode in the plot. None music Set to a music disk ID (item name) to play the music disc. None"},{"location":"plot-flags/#string","title":"String","text":"Name Description Default Value description Plot description. None farewell Message sent to players when leaving the plot. None greeting Message sent to players on plot entry. None plot-title Set the pop-up title\u2019s title and subtitle. Format: <code>/plot flag set title \"A title\" \"The subtitle\"</code> None"},{"location":"plot-flags/#timed","title":"Timed","text":"Name Description Default Value feed Specify an interval in seconds and an optional amount by which the players will be fed (amount is 0 by default = vanilla-regeneration). None heal Specify an interval in seconds and an optional amount by which the players will be healed (amount is 0 by default = vanilla-regeneration). None"},{"location":"schematic-generation/","title":"Schematic generation","text":"<p>In order to have a plot world generate with schematics do the following:</p> <ol> <li>Create a plot schematic with <code>/plot schematic save</code></li> <li>Move the created schematic from <code>/plugins/PlotSquared/schematics/</code> to <code>/plugins/PlotSquared/schematics/GEN_ROAD_SCHEMATIC/&lt;world name&gt;/</code> and rename it to <code>plot.schematic</code>/<code>plot.schem</code> (depending on the file extension of the schematic file you\u2019re moving)</li> <li>In <code>settings.yml</code>, add/update the following:</li> </ol> <pre><code># Schematic Settings\nschematics:\n# Whether schematic based generation should paste schematic on top of plots, or from Y=1\npaste-on-top: false\n</code></pre> <p>The world will now generate using the schematic.</p>"},{"location":"single-plot-area/","title":"Single Plot Area","text":"<ol> <li>Create a square/cuboid selection using WorldEdit\u2019s wand (<code>//wand</code>). The lowest Y value in the selection will be the plot height, and determines where you teleport by default, where the floor is generated when using <code>/plot set</code>, etc.</li> <li>Use <code>/plot area single &lt;name&gt;</code>, where <code>&lt;name&gt;</code> is a unique identifier. This will be used when teleporting to the area, etc.</li> <li>The area is now created.</li> </ol> <p>When creating the area, PlotSquared saves a schematic which will be used when regenerating the area when using <code>/plot clear</code>, <code>/plot delete</code> and other regenerative commands. Thus, the plot can be cleared to restore it to its original state.</p> <p>The plot area settings can be modified just like normal area settings.</p>"},{"location":"why-should-you-switch-to-plotsquared/","title":"Why should you switch to PlotSquared?","text":""},{"location":"why-should-you-switch-to-plotsquared/#speed","title":"Speed","text":"<ul> <li>Async: clear plots more than 800 times faster than PlotMe</li> <li>Plot auto doesn\u2019t lag or crash the server</li> <li>Much faster chunk generation, plot moving, swapping + everything</li> <li>Supports huge plot sizes (e.g. 1024x1024 of custom terrain)</li> <li>Works with hundreds of thousands of plots</li> </ul>"},{"location":"why-should-you-switch-to-plotsquared/#reduce-lag","title":"Reduce lag","text":"<ul> <li>Plot purging and old plot removal</li> <li>Optional dynamic world border and world chunk trimming</li> <li>Mass plot condensation</li> <li>Redstone clock prevention</li> <li>Mob limiting</li> </ul>"},{"location":"why-should-you-switch-to-plotsquared/#safet","title":"Safet","text":"<ul> <li>You can safely allow redstone, tnt without worrying about lag, griefing from sand cannons, pistons, tnt, \u2026</li> <li>You have a reliable WorldEdit / FastAsyncWorldEdit restriction</li> <li>Chunk and WorldEdit processor to prevent lag, crashes and data corruption</li> <li>Lots of redundancies. e.g. Backup your database with <code>/plot database</code>, or if you loose both, you can still recover based on plot sign information.</li> </ul>"},{"location":"why-should-you-switch-to-plotsquared/#looks","title":"Looks","text":"<ul> <li>Add amazing roads schematics and plot schematics to existing worlds</li> <li>Easily change the message color scheme</li> <li>Titles (entry notifications)</li> <li>Per plot time / weather / music via plot flags</li> </ul>"},{"location":"why-should-you-switch-to-plotsquared/#support","title":"Support","text":"<ul> <li>Support for Minecraft 1.13.2 to 1.18.2 and higher</li> <li>Works with offline-mode servers</li> <li>Community Translations</li> <li>fast Discord support</li> </ul>"},{"location":"why-should-you-switch-to-plotsquared/#features","title":"Features","text":"<ul> <li>Plot merging</li> <li>Extensive flag system (\\~100+ flags)</li> <li>Plot clusters in normal worlds</li> <li>Augmented generation (e.g. Vanilla, Islands, TerrainControl)</li> <li>PlotSquared Web interface</li> <li>Plot approval system</li> <li>Donut shaped plots (or any shape symmetrical about x=z)</li> <li>FastAsyncVoxelSniper support</li> <li>Plot component percent composition control</li> <li>Biome generation inside plots</li> <li>Dynmap</li> <li> <p>and much more \u2026</p> </li> <li> <p>Download PlotSquared</p> </li> <li>Our support discord is available at https://discord.gg/intellectualsites</li> </ul>"},{"location":"api/api-documentation/","title":"API Documentation","text":"<p>\ud83c\udfe0 Return to the index</p>"},{"location":"api/api-documentation/#2-maven-gradle-examples","title":"2. Maven &amp; Gradle Examples","text":"<ul> <li>Javadocs: https://intellectualsites.github.io/plotsquared-javadocs/</li> <li>Major upgrade diff: https://intellectualsites.github.io/plotsquared-api-diff/</li> </ul> <p> Gradle is the recommended when working with the PlotSquared API. Ensure the toolchain points to Java 17 or higher.</p>"},{"location":"api/api-documentation/#21-gradle-plotsquared-core","title":"2.1. Gradle - PlotSquared Core","text":"<p>If you need to access the Bukkit module of PlotSquared, copy the example below.</p> <pre><code>repositories {\n    mavenCentral()\n    maven { url = uri(\"https://repo.papermc.io/repository/maven-public/\") }\n}\n\ndependencies {\n    implementation(platform(\"com.intellectualsites.bom:bom-1.18.x:1.27\"))\n    compileOnly(\"com.plotsquared:PlotSquared-Core\")\n}\n</code></pre>"},{"location":"api/api-documentation/#22-gradle-plotsquared-core-and-bukkit","title":"2.2. Gradle - PlotSquared Core and Bukkit","text":"<pre><code>repositories {\n    mavenCentral()\n    maven { url = uri(\"https://repo.papermc.io/repository/maven-public/\") }\n}\n\ndependencies {\n    implementation(platform(\"com.intellectualsites.bom:bom-1.18.x:1.27\"))\n    compileOnly(\"com.plotsquared:PlotSquared-Core\")\n    compileOnly(\"com.plotsquared:PlotSquared-Bukkit\") { isTransitive = false }\n}\n</code></pre>"},{"location":"api/api-documentation/#23-maven-plotsquared-core","title":"2.3. Maven - PlotSquared Core","text":"<pre><code>&lt;repositories&gt;\n&lt;repository&gt;\n&lt;id&gt;papermc&lt;/id&gt;\n&lt;url&gt;https://repo.papermc.io/repository/maven-public/&lt;/url&gt;\n&lt;/repository&gt;\n&lt;/repositories&gt;\n&lt;dependencyManagement&gt;\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;com.intellectualsites.bom&lt;/groupId&gt;\n&lt;artifactId&gt;bom-1.18.x&lt;/artifactId&gt;\n&lt;version&gt;1.27&lt;/version&gt;\n&lt;scope&gt;import&lt;/scope&gt;\n&lt;type&gt;pom&lt;/type&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n&lt;/dependencyManagement&gt;\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;com.plotsquared&lt;/groupId&gt;\n&lt;artifactId&gt;PlotSquared-Core&lt;/artifactId&gt;\n&lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre>"},{"location":"api/api-documentation/#24-maven-plotsquared-core-and-bukkit","title":"2.4. Maven - PlotSquared Core and Bukkit","text":"<pre><code>&lt;repositories&gt;\n&lt;repository&gt;\n&lt;id&gt;papermc&lt;/id&gt;\n&lt;url&gt;https://repo.papermc.io/repository/maven-public/&lt;/url&gt;\n&lt;/repository&gt;\n&lt;/repositories&gt;\n&lt;dependencyManagement&gt;\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;com.intellectualsites.bom&lt;/groupId&gt;\n&lt;artifactId&gt;bom-1.18.x&lt;/artifactId&gt;\n&lt;version&gt;1.27&lt;/version&gt;\n&lt;scope&gt;import&lt;/scope&gt;\n&lt;type&gt;pom&lt;/type&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n&lt;/dependencyManagement&gt;\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;com.plotsquared&lt;/groupId&gt;\n&lt;artifactId&gt;PlotSquared-Core&lt;/artifactId&gt;\n&lt;scope&gt;provided&lt;/scope&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;com.plotsquared&lt;/groupId&gt;\n&lt;artifactId&gt;PlotSquared-Bukkit&lt;/artifactId&gt;\n&lt;scope&gt;provided&lt;/scope&gt;\n&lt;exclusions&gt;\n&lt;exclusion&gt;\n&lt;artifactId&gt;PlotSquared-Core&lt;/artifactId&gt;\n&lt;groupId&gt;*&lt;/groupId&gt;\n&lt;/exclusion&gt;\n&lt;/exclusions&gt;\n&lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre>"},{"location":"api/api-documentation/#4-terminology","title":"4. Terminology","text":""},{"location":"api/api-documentation/#41-plot-area","title":"4.1. Plot area","text":"<p>A plot area is any area that PlotSquared will manage/handle. If this is an infinite plot world, the entire world is considered to be a plot area. If you use plot clusters, then only part of the world will be a plot area, and anything outside this area will not be handled by PlotSquared.</p>"},{"location":"api/api-documentation/#42-clusters","title":"4.2. Clusters","text":"<p>Clusters can be created within existing plot areas, or they can be created in a previously non-plot world, which will in turn create it\u2019s own plot area.</p>"},{"location":"api/api-documentation/#43-road","title":"4.3. Road","text":"<p>A road is what separates each plot, and includes the wall around each plot. Attempting to get a plot at this location will return null.</p>"},{"location":"api/api-documentation/#44-plot","title":"4.4. Plot","text":"<p>A plot can be claimed or unclaimed. Getting a plot at a location where one isn\u2019t claimed will return a new unowned plot object.</p>"},{"location":"api/api-flag-documentation/","title":"API Flag Documentation","text":""},{"location":"api/api-flag-documentation/#2-querying-the-state-of-a-flag","title":"2. Querying the state of a flag","text":"<p>If you want to know the current value of a flag on a plot, you can simply write</p> <pre><code>boolean pvp = plot.getFlag(PvpFlag.class);\n</code></pre> <p>In this example, we\u2019re querying the state of the PvpFlag, which is a <code>BooleanFlag</code>, and the method directly returns the value we want to use afterwards.</p>"},{"location":"api/api-flag-documentation/#3-creating-a-flag","title":"3. Creating a flag","text":"<p>Each flag contains one immutable value. The type of this value is supplied as a generic parameter to the PlotFlag class, like such:</p> <pre><code>import com.plotsquared.core.plot.flag.FlagParseException;\nimport com.plotsquared.core.plot.flag.PlotFlag;\npublic class YourFlag extends PlotFlag&lt;YourValueType, YourFlag&gt; {\n// Your code\n}\n</code></pre> <p>The flag may implement <code>com.plotsquared.core.plot.flag.InternalFlag</code>, in which case the flag won\u2019t be visible to the user. This allows you to store information that is associated with the plot, using the flag framework.</p> <p>The PlotFlag constructor requires three parameters:</p> <ul> <li>The (non-null) immutable flag value</li> <li>A flag category</li> <li>A flag description</li> </ul> <p>The category and description should be a TranslatableCaption <code>com.plotsquared.core.configuration.caption.TranslatableCaption</code>. An instance of Caption can be created by using <code>com.plotsquared.core.configuration.caption.StaticCaption</code>.</p> <p>Your flag constructor should look something like this:</p> <pre><code>public YourFlag(final YourValueType value) {\nsuper(value, TranslatableCaption.of(\"flags.your_flag\"), TranslatableCaption.of(\"flags.your_description\"));\n}\n</code></pre> <p>Your flag class needs to override the following methods:</p> <ul> <li><code>YourFlag parse(@NotNull String input) throws FlagParseException</code>,</li> <li><code>YourFlag merge(@NotNull YourValueType newValue)</code>,</li> <li><code>String toString()</code>: Returns the string serialization of the current value.</li> <li><code>String getExample()</code>: Returns an example argument.</li> <li><code>YourFlag flagOf(@NotNull YourValueType value)</code>: Returns a new instance of your flag.</li> </ul> <p>The <code>parse(String input)</code> method parses a string input, and returns a new flag instance. If the input is not valid, <code>FlagParseException</code> is thrown. It should look something like:</p> <pre><code>@Override\npublic YourFlag parse(@NotNull final String input) throws FlagParseException {\nif (isValid(input)) {\nYourValueType type = convertSomehow(input);\nreturn flagOf(type);\n}\nthrow new FlagParseException(this, input, TranslatableCaption.of(\"flags.caption_message\"));\n}\n</code></pre> <p>The caption is created in the same way as for the constructor. There are some pre-made error captions in the message_en.json file, prefixed with <code>lags.flag_error_</code>. The FlagParseException takes in further parameters that will replace the placeholder values in the caption (<code>&lt;{value}&gt;</code>), if needed.</p> <p>This method should NEVER return null. If the value cannot be parsed, throw an exception.</p> <p>The merge method allows you to merge two different flag instances, which allows users to use the <code>/plot flag add &lt;flag&gt; &lt;value&gt;</code> command on the flag. If merging isn\u2019t supported, simply return <code>flagOf(newValue)</code>.</p> <p>As the values are immutable, it is possible (and encouraged) to re-use flag instances.</p>"},{"location":"api/api-flag-documentation/#4-registering-a-flag","title":"4. Registering a flag","text":"<p>All flags must be registered in the <code>GlobalFlagContainer</code>, or else they will not be usable in-game. Each flag will be applied to every plot, so it is necessary to pick appropriate default flag values.</p> <p>To register a flag, use: <code>com.plotsquared.plot.flags.GlobalFlagContainer().getInstance().addFlag(flagInstance)</code></p>"},{"location":"api/api-flag-documentation/#5-adding-a-flag-to-a-plot","title":"5. Adding a flag to a plot","text":"<p>To add a flag to a plot, use <code>plot.setFlag(flagInstance)</code>. If you need a new flag instance, and only have the flag type, it is possible to add a flag using <code>plot.addFlag(GlobalFlagContainer.getInstance().getFlag(flagInstance).createFlagInstance(flagValue))</code></p>"},{"location":"api/event-api/","title":"Event API","text":""},{"location":"api/event-api/#1-introduction","title":"1. Introduction","text":"<p>PlotSquared uses the Guava EventBus to register listeners and dispatch events.</p>"},{"location":"api/event-api/#2-event-list","title":"2. Event List","text":"<p>Events can be found here.</p>"},{"location":"api/event-api/#3-getting-an-instance","title":"3. Getting an instance","text":"<pre><code>import org.bukkit.Bukkit;\nimport org.bukkit.plugin.java.JavaPlugin;\npublic class MyPlotPlugin extends JavaPlugin {\npublic static MyPlotPlugin THIS;\n@Override\npublic void onEnable() {\nMyPlotPlugin.THIS = this;\nif (Bukkit.getPluginManager().getPlugin(\"PlotSquared\") != null) {\n// Do something\n}\n}\n}\n</code></pre>"},{"location":"api/event-api/#4-registering-a-listener","title":"4. Registering a Listener","text":"<p>Registering a listener is super easy. Add the <code>@Subscribe</code> (from the <code>com.google.common.eventbus</code> package) annotation to any methods that are listening to events, register the class with the EventBus through <code>PlotAPI#registerListener(Class)</code> and you\u2019re done! One example:</p> <pre><code>public class P2Listener {\n// if you like the dependency-injection-like approach:\npublic P2Listener(PlotAPI api) {\napi.registerListener(this);\n}\n// less OOP, but if you want to make things easy:\npublic P2Listener() {\nPlotAPI api = new PlotAPI();\napi.registerListener(this);\n}\n// A method handling a PlayerEnterPlotEvent\n@Subscribe\npublic void onPlayerEnterPlot(PlayerEnterPlotEvent e) {\n//do stuff\n}\n}\n</code></pre>"},{"location":"files/settings.yml/","title":"settings.yml","text":"<pre><code># This value is not configurable. It shows the platform you are using.\nplatform: \"Bukkit\"\n# Show additional information in console. It helps us at IntellectualSites to find out more about an issue.\n# Leave it off if you don't need it, it can spam your console.\ndebug: true\n# Redstone related settings\nredstone:\n# Disable redstone in unoccupied plots\ndisable-unoccupied: false\n# Disable redstone when all owners/trusted/members are offline\ndisable-offline: false\n# Detect and cancel invalid pistons on the edge of plots (e.g. placed with WorldEdit)\ndetect-invalid-edge-pistons: false\n# UUID settings\n# DO NOT EDIT them unless you know what you are doing.\nuuid:\n# Force using offline UUIDs (it usually detects the right mode)\noffline: false\n# Force using lowercase UUIDs\nforce-lowercase: false\n# How many UUIDs that may be stored in the cache\nuuid-cache-size: 100000\n# Rate limit (per 10 minutes) for background UUID fetching from the Mojang API\nbackground-limit: 200\n# Rate limit (per 10 minutes) for random UUID fetching from the Mojang API\nimpromptu-limit: 300\n# Timeout (in milliseconds) for non-blocking UUID requests (mostly commands)\nnon-blocking-timeout: 3000\n# Timeout (in milliseconds) for blocking UUID requests (events)\nblocking-timeout: 10\n# Whether or not PlotSquared should read from the legacy database\nlegacy-database-support: true\n# Whether or not PlotSquared should return Unknown if it fails to fulfill a request\nunknown-as-default: true\n# Whether or not automatic background caching should be enabled. It is HIGHLY recommended to keep this turned on. This should only be disabled if the server has a very large number of plots (&gt;100k)\nbackground-caching-enabled: true\n# Whether the PaperMC service is enabled\nservice-paper: true\n# Whether the LuckPerms service is enabled\nservice-luckperms: true\n# Whether the Bukkit service is enabled\nservice-bukkit: true\n# Whether the EssentialsX service is enabled\nservice-essentialsx: true\n# Enable or disable parts of the plugin\n# Note: A cache will use some memory if enabled\nenabled-components:\n# The database stores all the plots\ndatabase: true\n# Events are needed to track a lot of things\nevents: true\n# Commands are used to interact with the plugin\ncommands: true\n# Whether we should notify you about updates or not.\nupdate-notifications: true\n# Stores user metadata in a database\npersistent-meta: true\n# Getting a rating won't need the database\nrating-cache: true\n# Allow WorldEdit to be restricted to plots\nworldedit-restrictions: true\n# Allow economy to be used to sell, claim or buy plots.\neconomy: false\n# Expiry will clear old or simplistic plots\nplot-expiry: false\n# Processes chunks (trimming, or entity/tile limits)\nchunk-processor: false\n# Kill mobs on roads (Chicken, Cow, etc.)\nkill-road-mobs: false\n# Also kill any road mobs that are being ridden, or are leashed\nkill-owned-road-mobs: false\n# Kill items on roads (Stick, Paper, etc.)\nkill-road-items: false\n# Kill vehicles on roads (Boat, Minecart, etc.)\nkill-road-vehicles: false\n# Notify a player of any missed plot comments upon plot entry\ncomment-notifier: true\n# Let players claim entire worlds with PlotSquared\nworlds: false\n# Actively purge invalid database entries\ndatabase-purger: false\n# Delete plots when a player is banned.\n# Note: This only works with the /minecraft:ban command. Any punishment plugin is not supported.\nban-deleter: false\n# Allows PlaceholderAPI placeholders to be used in captions, flags, etc.\nexternal-placeholders: true\n# Make road regeneration persistent across restarts\npersistent-road-regen: true\n# Enable the `/plot component` preset GUI\n# Read more about components here: https://intellectualsites.github.io/plotsquared-documentation/customization/plot-components\ncomponent-presets: true\n# Enable per user locale\nper-user-locale: false\n# The default locale. Before changing the language, make sure you downloaded the appropriate file and put it in the 'lang' folder.\n# You can find additional translations here: https://intellectualsites.crowdin.com/plotsquared\ndefault-locale: \"en\"\n# Use UUID cache to complete usernames\nextended-username-completion: true\n# Command aliases that will be tab completed\ntab-completed-aliases:\n- \"plot\"\n- \"plots\"\n- \"p\"\n- \"plotsquared\"\n- \"plot2\"\n- \"p2\"\n- \"ps\"\n- \"2\"\n- \"plotme\"\n- \"plotz\"\n- \"ap\"\n# Whether PlotSquared should hook into MvDWPlaceholderAPI or not\nuse-mvdwapi: true\n# This is an auto clearing task called `task1`\nauto-clear:\ntask1:\nthreshold: -1\nrequired-plots: -1\nconfirmation: true\ndays: 90\nskip-account-age-days: -1\n# True, if a plot should be deleted if the plot owner is unknown to the server\ndelete-if-owner-is-unknown: false\nworlds:\n- \"*\"\n# See: https://intellectualsites.github.io/plotsquared-documentation/optimization/plot-analysis for a description of each value.\ncalibration:\nvariety: 0\nvariety-sd: 0\nchanges: 0\nchanges-sd: 1\nfaces: 0\nfaces-sd: 0\ndata-sd: 0\nair: 0\nair-sd: 0\ndata: 0\n# Miscellaneous settings\ndone:\n# Require a plot marked as done to download (/plot download)\nrequired-for-download: false\n# Only plots marked as done can be rated\nrequired-for-ratings: false\n# Restrict building when a plot is marked as done\nrestrict-building: false\n# The limit being how many plots a player can claim\ncounts-towards-limit: true\n# Configure the paths that will be used\npaths:\nschematics: \"schematics\"\ntemplates: \"templates\"\n# Schematic interface related settings\nweb:\n# The web interface for schematics\n#  - All schematics are anonymous and private\n#  - Downloads can be deleted by the user\n#  - Supports plot uploads, downloads and saves\nurl: \"https://schem.intellectualsites.com/plots/\"\n# Whether or not the legacy web interface will be used for /plot download and /plot save\n# Note that this will be removed in future versions. Updating to Arkitektonika is highly suggested\nlegacy-webinterface: false\n# Rating related settings\nratings:\n# Replace the rating system with a like system. Will add /plot like/dislike, and remove the rating command\nuse-likes: false\n# Rating categories\ncategories: []\n# The blocks to use for the rating GUI if categories are set above\nblock-0: \"brown_wool\"\nblock-1: \"red_wool\"\nblock-2: \"orange_wool\"\nblock-3: \"yellow_wool\"\nblock-4: \"lime_wool\"\nblock-5: \"cyan_wool\"\nblock-6: \"blue_wool\"\nblock-7: \"purple_wool\"\nblock-8: \"magenta_wool\"\n# Teleportation related settings\nteleport:\n# Teleport to your plot on death\non-death: false\n# Teleport to your plot on login\non-login: false\n# Teleport to your plot on claim (/plot claim)\non-claim: true\n# Teleport to your plot on auto (/plot auto)\non-auto: true\n# Add a delay to all teleport commands (in seconds)\n# Assign `plots.teleport.delay.bypass` to bypass the cooldown\ndelay: 0\n# Teleport outside of the plot before clearing\non-clear: false\n# Teleport outside of the plot before deleting\non-delete: false\n# The visit command is ordered by world instead of globally\nper-world-visit: false\n# Search merged plots for having multiple owners when using the visit command\nvisit-merged-owners: true\n# Chunk processor related settings\n# See https://intellectualsites.github.io/plotsquared-documentation/optimization/Chunk-processor for more information.\nchunk-processor:\n# Auto trim will not save chunks which aren't claimed\nauto-trim: false\n# Max tile entities per chunk\nmax-tiles: 4096\n# Max entities per chunk\nmax-entities: 512\n# Disable block physics\ndisable-physics: false\n# Claim related settings\nclaim:\n# The max plots claimed in a single `/plot auto &lt;size&gt;` command\nmax-auto-area: 4\n# Relating to how many plots someone can claim\nlimit:\n# Should the limit be global (over multiple worlds)\nglobal: false\n# The max range of permissions to check for, e.g. plots.plot.127\n# The value covers the permission range to check, you need to assign the permission to players/groups still\n# Modifying the value does NOT change the amount of plots players can claim\nmax-plots: 127\n# Settings related to plot titles\ntitles:\n# The big text that appears when you enter a plot.\n# For a single plot set `/plot flag set titles false` to disable it.\n# For just you run `/plot toggle titles` to disable it.\n# For all plots: Add `titles: false` in the worlds.yml flags block to disable it.\ndisplay-titles: true\n# Plot titles fading in (duration in ticks)\ntitles-fade-in: 10\n# Plot titles being shown (duration in ticks)\ntitles-stay: 50\n# Plot titles fading out (duration in ticks)\ntitles-fade-out: 20\n# Changes the notification method on plot entry from Title + SubTitle -&gt; ActionBar.\n# The message still sent to the player is pulled from the lang key \"titles.title_entered_plot\".\n# If you would like to still show the owner of the plot, append the contents of \"titles.title_entered_plot_sub\" onto the former lang key.\ntitles-as-actionbar: false\n# If the default title should be displayed on plots with server-plot flag set.\n# Titles will still be sent if the plot-title flag is set.\ndisplay-default-on-server-plot: false\n# Settings related to tab completion\ntab-completions:\n# The time in seconds how long tab completions should remain in cache.\n# 0 will disable caching. Lower values may be less performant.\ncache-expiration: 15\n# Settings relating to PlotSquared's GlobalBlockQueue\nqueue:\n# Average time per tick spent completing chunk tasks in ms.\n# Queue will adjust the batch size to match this.\nmax-iteration-time: 30\n# Initial number of chunks to process by the queue. This can be increased or\n# decreased by the queue based on the actual iteration time compared to above.\ninitial-batch-size: 5\n# Notify progress of the queue to the player or console.\nnotify-progress: true\n# Interval in ms to notify player or console of progress.\nnotify-interval: 5000\n# Time to wait in ms before beginning to notify player or console of progress.\n# Prevent needless notification of progress for short queues.\nnotify-wait: 5000\n# How lighting should be handled by the queue. Modes:\n#   - 0 - Do not do any lighting (fastest)\n#   - 1 - Only execute lighting where blocks with light values are placed\n#   - 2 - Only execute lighting where blocks with light values are placed or removed/replaced\n#   - 3 - Always execute lighting (slowest)\nlighting-mode: 1\n# If blocks at the edges of queued operations should be set causing updates\n#  - Slightly slower, but prevents issues such as fences left connected to nothing\nupdate-edges: true\n# Enable or disable parts of the plugin specific to using Paper\npaper-components:\n# Enable Paper's listeners.\npaper-listeners: true\n# Prevent entities from leaving plots\nentity-pathing: true\n# Cancel entity spawns when the chunk is loaded if the PlotArea's mob spawning is off\ncancel-chunk-spawn: true\n# Use paper's PlayerLaunchProjectileEvent to cancel projectiles\nplayer-projectile: true\n# Cancel entity spawns from spawners before they happen (performance buff)\nspawner-spawn: true\n# Cancel entity spawns from tick spawn rates before they happen (performance buff)\ncreature-spawn: true\n# Check the tile entity limit on block placement\ntile-entity-check: true\n# Use Paper's async tab completion\nasync-tab-completion: false\n# Enable or disable all of or parts of the FAWE-P2 hook\nfawe-components:\n# Use FAWE for queue handling.\nfawe-hook: true\ncuboids: true\nclear: true\ncopy-and-swap: true\nset-biome: true\n# Confirmation timeout related settings\nconfirmation:\n# Timeout before a confirmation prompt expires\nconfirmation-timeout-seconds: 20\n# Backup related settings\n# See https://intellectualsites.github.io/plotsquared-documentation/plot-backups for more information.\nbackup:\n# Automatically backup plots when destructive commands are performed, e.g. /plot clear\nautomatic-backups: true\n# Maximum amount of backups associated with a plot\nbackup-limit: 3\n# Whether or not backups should be deleted when the plot is unclaimed\ndelete-on-unclaim: true\n# Chat related settings\nchat:\n# Should the plot chat be logged to console?\nlog-plotchat-to-console: true\n# Whether an action bar message should be send over a chat message for notification purposes such for the\n# notify-enter, notify-leave, greeting or farewell flag.\nnotification-as-actionbar: false\n# The click event actions that should be removed from user input in e.g. plot flags like 'greeting'.\n# Actions like 'RUN_COMMAND' may be used maliciously as players could trick staff into clicking on messages\n# triggering destructive commands.\nclick-event-actions-to-remove:\n- \"OPEN_URL\"\n- \"OPEN_FILE\"\n- \"RUN_COMMAND\"\n- \"SUGGEST_COMMAND\"\n- \"CHANGE_PAGE\"\n- \"COPY_TO_CLIPBOARD\"\n# Used to format the plot creation date placeholder. Modifying the format does not affect the storage time.\ntimeformat:\n# The date used formatted in ISO 8601\ndate-format: \"yyyy-MM-dd HH:mm:ss z\"\n# The time zone used\ntime-zone: \"GMT\"\n# Schematic web interface related settings\narkitektonika:\n# The url of the backend server (Arkitektonika)\nbackend-url: \"https://api.schematic.cloud/\"\n# The url used to generate a download link from.\n# {key} will be replaced with the generated key\ndownload-url: \"https://api.schematic.cloud/download/{key}\"\n# The url used to generate a deletion link from.\n# {key} will be replaced with the generated key\ndelete-url: \"https://api.schematic.cloud/delete/{key}\"\n# Schematic Settings\n# See https://intellectualsites.github.io/plotsquared-documentation/schematics/schematic-on-claim for more information.\nschematics:\n# Whether schematic based generation should paste schematic on top of plots, or from Y=1\npaste-on-top: true\n# Whether schematic based road generation should paste schematic on top of roads, or from Y=1\npaste-road-on-top: true\n# If schematics that do not match a plot's size should be pasted anyway\n#  - This will still only paste a schematic with a plot's bounds.\n#  - If a schematic is too big, it will cut off, and if too small, will not full the plot.\npaste-mismatches: true\n# If the wall height should be taken into account when calculating the road schematic paste height\n#  - If true, will use the lower of wall and road height.\n#  - If true, will ensure correct schematic behaviour (no parts are cut off).\n#  - Set to false if you experience the road being set one block too low\n#    (only for road schematics created pre 6.1.4).\nuse-wall-in-road-schem-height: true\n# Update checker settings\nupdatechecker:\n# How often to poll for updates (in minutes)\npoll-rate: 360\n# Only notify console once after an update is found\nnotify-once: true\n# General settings\ngeneral:\n# Display scientific numbers (4.2E8)\nscientific: false\n# Replace wall when merging\nmerge-replace-wall: true\n# Always show explosion Particles, even if explosion flag is set to false\nalways-show-explosions: false\n# Blocks that may not be used in plot components\n# Checkout the wiki article regarding plot components before modifying: https://intellectualsites.github.io/plotsquared-documentation/customization/plot-components\ninvalid-blocks:\n- \"acacia_button\"\n- \"acacia_fence_gate\"\n- \"acacia_door\"\n- \"acacia_pressure_plate\"\n- \"acacia_trapdoor\"\n- \"acacia_sapling\"\n- \"acacia_sign\"\n- \"acacia_wall_sign\"\n- \"acacia_leaves\"\n- \"birch_button\"\n- \"birch_fence_gate\"\n- \"birch_door\"\n- \"birch_pressure_plate\"\n- \"birch_trapdoor\"\n- \"birch_sapling\"\n- \"birch_sign\"\n- \"birch_wall_sign\"\n- \"birch_leaves\"\n- \"dark_oak_button\"\n- \"dark_oak_fence_gate\"\n- \"dark_oak_door\"\n- \"dark_oak_pressure_plate\"\n- \"dark_oak_trapdoor\"\n- \"dark_oak_sapling\"\n- \"dark_oak_sign\"\n- \"dark_oak_wall_sign\"\n- \"dark_oak_leaves\"\n- \"jungle_button\"\n- \"jungle_fence_gate\"\n- \"jungle_door\"\n- \"jungle_pressure_plate\"\n- \"jungle_trapdoor\"\n- \"jungle_sapling\"\n- \"jungle_sign\"\n- \"jungle_wall_sign\"\n- \"jungle_leaves\"\n- \"oak_button\"\n- \"oak_fence_gate\"\n- \"oak_door\"\n- \"oak_pressure_plate\"\n- \"oak_trapdoor\"\n- \"oak_sapling\"\n- \"oak_sign\"\n- \"oak_wall_sign\"\n- \"oak_leaves\"\n- \"spruce_button\"\n- \"spruce_fence_gate\"\n- \"spruce_door\"\n- \"spruce_pressure_plate\"\n- \"spruce_trapdoor\"\n- \"spruce_sapling\"\n- \"spruce_sign\"\n- \"spruce_wall_sign\"\n- \"spruce_leaves\"\n- \"activator_rail\"\n- \"detector_rail\"\n- \"rail\"\n- \"allium\"\n- \"azure_bluet\"\n- \"blue_orchid\"\n- \"dandelion\"\n- \"lilac\"\n- \"orange_tulip\"\n- \"oxeye_daisy\"\n- \"peony\"\n- \"pink_tulip\"\n- \"poppy\"\n- \"potted_allium\"\n- \"potted_azure_bluet\"\n- \"potted_birch_sapling\"\n- \"potted_blue_orchid\"\n- \"potted_brown_mushroom\"\n- \"potted_cactus\"\n- \"potted_fern\"\n- \"potted_jungle_sapling\"\n- \"potted_oak_sapling\"\n- \"potted_orange_tulip\"\n- \"potted_oxeye_daisy\"\n- \"potted_pink_tulip\"\n- \"potted_red_mushroom\"\n- \"potted_red_tulip\"\n- \"red_mushroom\"\n- \"red_tulip\"\n- \"potted_spruce_sapling\"\n- \"potted_white_tulip\"\n- \"rose_bush\"\n- \"sunflower\"\n- \"white_tulip\"\n- \"cornflower\"\n- \"wither_rose\"\n- \"attached_melon_stem\"\n- \"attached_pumpkin_stem\"\n- \"melon_stem\"\n- \"pumpkin_stem\"\n- \"mushroom_stem\"\n- \"beetroots\"\n- \"brown_mushroom\"\n- \"cactus\"\n- \"carrots\"\n- \"chorus_flower\"\n- \"chorus_plant\"\n- \"cocoa\"\n- \"dead_bush\"\n- \"fern\"\n- \"kelp_plant\"\n- \"large_fern\"\n- \"lily_pad\"\n- \"potatoes\"\n- \"sea_pickle\"\n- \"seagrass\"\n- \"sugar_cane\"\n- \"tall_grass\"\n- \"tall_seagrass\"\n- \"vine\"\n- \"wheat\"\n- \"bamboo\"\n- \"anvil\"\n- \"barrier\"\n- \"beacon\"\n- \"brewing_stand\"\n- \"bubble_column\"\n- \"cake\"\n- \"cobweb\"\n- \"comparator\"\n- \"creeper_head\"\n- \"creeper_wall_header\"\n- \"damaged_anvil\"\n- \"daylight_detector\"\n- \"dragon_egg\"\n- \"dragon_head\"\n- \"dragon_wall_head\"\n- \"enchanting_table\"\n- \"end_gateway\"\n- \"end_portal\"\n- \"end_rod\"\n- \"ender_chest\"\n- \"chest\"\n- \"flower_pot\"\n- \"grass\"\n- \"heavy_weighted_pressure_plate\"\n- \"lever\"\n- \"light_weighted_pressure_plate\"\n- \"player_head\"\n- \"redstone_wire\"\n- \"repeater\"\n- \"comparator\"\n- \"redstone_torch\"\n- \"torch\"\n- \"redstone_wall_torch\"\n- \"wall_torch\"\n- \"sign\"\n- \"skeleton_skull\"\n- \"skeleton_wall_skull\"\n- \"snow\"\n- \"stone_pressure_plate\"\n- \"trapped_chest\"\n- \"tripwire\"\n- \"tripwire_hook\"\n- \"turtle_egg\"\n- \"wall_sign\"\n- \"zombie_head\"\n- \"zombie_wall_head\"\n- \"bell\"\n- \"black_bed\"\n- \"black_banner\"\n- \"black_carpet\"\n- \"black_concrete_powder\"\n- \"black_wall_banner\"\n- \"blue_bed\"\n- \"blue_banner\"\n- \"blue_carpet\"\n- \"blue_concrete_powder\"\n- \"blue_wall_banner\"\n- \"brown_bed\"\n- \"brown_banner\"\n- \"brown_carpet\"\n- \"brown_concrete_powder\"\n- \"brown_wall_banner\"\n- \"cyan_bed\"\n- \"cyan_banner\"\n- \"cyan_concrete_powder\"\n- \"cyan_carpet\"\n- \"cyan_wall_banner\"\n- \"gray_bed\"\n- \"gray_banner\"\n- \"gray_concrete_powder\"\n- \"gray_carpet\"\n- \"gray_wall_banner\"\n- \"green_bed\"\n- \"green_banner\"\n- \"green_concrete_powder\"\n- \"green_carpet\"\n- \"green_wall_banner\"\n- \"light_blue_bed\"\n- \"light_blue_banner\"\n- \"light_blue_concrete_powder\"\n- \"light_blue_carpet\"\n- \"light_blue_wall_banner\"\n- \"light_gray_bed\"\n- \"light_gray_banner\"\n- \"light_gray_concrete_powder\"\n- \"light_gray_carpet\"\n- \"light_gray_wall_banner\"\n- \"lime_bed\"\n- \"lime_banner\"\n- \"lime_concrete_powder\"\n- \"lime_carpet\"\n- \"lime_wall_banner\"\n- \"magenta_bed\"\n- \"magenta_banner\"\n- \"magenta_concrete_powder\"\n- \"magenta_carpet\"\n- \"magenta_wall_banner\"\n- \"orange_bed\"\n- \"orange_banner\"\n- \"orange_concrete_powder\"\n- \"orange_carpet\"\n- \"orange_wall_banner\"\n- \"pink_bed\"\n- \"pink_banner\"\n- \"pink_concrete_powder\"\n- \"pink_carpet\"\n- \"pink_wall_banner\"\n- \"purple_bed\"\n- \"purple_banner\"\n- \"purple_concrete_powder\"\n- \"purple_carpet\"\n- \"purple_wall_banner\"\n- \"red_bed\"\n- \"red_banner\"\n- \"red_concrete_powder\"\n- \"red_carpet\"\n- \"red_wall_banner\"\n- \"white_bed\"\n- \"white_banner\"\n- \"white_concrete_powder\"\n- \"white_carpet\"\n- \"white_wall_banner\"\n- \"yellow_bed\"\n- \"yellow_banner\"\n- \"yellow_concrete_powder\"\n- \"yellow_carpet\"\n- \"yellow_wall_banner\"\n- \"brain_coral\"\n- \"brain_coral_fan\"\n- \"brain_coral_wall_fan\"\n- \"bubble_coral\"\n- \"bubble_coral_block\"\n- \"bubble_coral_fan\"\n- \"bubble_coral_wall_fan\"\n- \"dead_brain_coral\"\n- \"dead_brain_coral_block\"\n- \"dead_brain_coral_fan\"\n- \"dead_brain_coral_wall_fan\"\n- \"dead_bubble_coral\"\n- \"dead_bubble_coral_fan\"\n- \"dead_bubble_coral_wall_fan\"\n- \"dead_fire_coral\"\n- \"dead_fire_coral_block\"\n- \"dead_fire_coral_fan\"\n- \"dead_fire_coral_wall_fan\"\n- \"dead_horn_coral\"\n- \"dead_horn_coral_block\"\n- \"dead_horn_coral_fan\"\n- \"dead_tube_coral\"\n- \"dead_tube_coral_wall_fan\"\n- \"dried_kelp_block\"\n- \"horn_coral\"\n- \"horn_coral_block\"\n- \"horn_coral_fan\"\n- \"horn_coral_wall_fan\"\n- \"tube_coral\"\n- \"tube_coral_block\"\n- \"tube_coral_fan\"\n- \"tube_coral_wall_fan\"\n</code></pre>"},{"location":"files/storage.yml/","title":"storage.yml","text":"<p>This is the main database settings file for PlotSquared.</p> <p>Located in: <code>/plugins/PlotSquared/config/storage.yml</code> If you are using SQLite, the <code>storage.db</code> is located in <code>/plugins/PlotSquared/storage.db</code></p>"},{"location":"files/worlds.yml/","title":"worlds.yml","text":"<pre><code>configuration_version: v5\nworlds:\n# The name of the world\nplotworld:\nplot:\n# The road height above from Y 0\nheight: 62\n# The road length around a plot\nsize: 42\n# Uses the block bucket format:\n# ex: stone,grass_block\nfilling: stone\n# Uses the block bucket format:\n# ex: stone,grass_block\nfloor: grass_block\n# Wheather the plot should have a bedrock layer at the bottom\nbedrock: true\n# The plot biome\nbiome: FOREST\n# Whether or not plots should be merged\nauto_merge: false\n# Whether or not signs should be created at the corner of a plot\ncreate_signs: true\n# The material to use for the plot signs.\nsign_material: OAK_WALL_SIGN\n# Configure the wall\nwall:\n# Uses the block bucket format:\n# ex: stone,grass_block\nblock: stone_slab\n# Uses the block bucket format:\n# ex: stone,grass_block\nblock_claimed: sandstone_slab\n# Uses the block bucket format:\n# ex: stone,grass_block\nfilling: stone\nheight: 62\n# Wheather or not blocks should be placed on top of the border\nplace_top_block: true\n# Configure the road\nroad:\n# Road width along a side of a plot\nwidth: 7\n# Road height from Y 0\nheight: 62\n# Uses the block bucket format:\n# ex: stone,grass_block\nblock: quartz_block\n# Apply flags for the road within the following pattern:\n# flags:\n#          pvp: true\n#                gamemode: survival\n# Do NOT add them inside the brackets\nflags: {}\nmisc_spawn_unowned: false\n# Configure the home\nhome:\n# side, center/middle or x,z (relative to the plot) or x,y,z\ndefault: side\n# side, center/middle or x,z (relative to the plot) or x,y,z\nnonmembers: side\nschematic:\n# Whether or not the user can choose between a schematic when they claim a plot\nspecify_on_claim: false\n# Wheather or not the schematic should be pasted on claim\non_claim: false\n# Define the schematic within the following format:\n# file:\n#                example.schem\nfile: 'null'\nschematics: []\n# Command costs\neconomy:\n# Can use ANTLR's lexer tokens for dynamic prices\n# See https://worldedit.enginehub.org/en/latest/usage/other/expressions/\n# for a list of supported arguments. The plot variable is referenced as plots\nprices:\nmerge: 100\nsell: 100\nclaim: 100\n# Wheather or not the setting should be active\nuse: false\n# Default plot chat mode (toggled with `/plot toggle chat`)\nchat:\nenabled: false\n# Whather or not plotchat will be on always\nforced: false\n# Limit the number of people that can be added to a plot\nlimits:\nmax-members: 128\nworld:\n# Build height going from Y\nmax_height: 256\nmin_height: 1\n# Used for the gamemode flag\ngamemode: creative\n# World border expands dynamically\nborder: false\n# false = disabled\nevent:\nspawn:\n# Wheather or not spawn eggs are enabled\negg: false\n# Wheather or not breeding is enabled\nbreeding: false\n# Wheather or not custom events are enabled\ncustom: true\n# Wheather or not natural mob spawning is enabled\nnatural_mob_spawning: false\n# Wheather or not spawners are spawning mobs\nmob_spawner_spawning: false\n# Controls the world type / terrain / generator used\ngenerator:\ntype: 0\nterrain: 0\nplugin: PlotSquared\n# Global plot flags, see: https://intellectualsites.github.io/plotsquared-documentation/plot-flags\nflags: {}\n</code></pre>"},{"location":"setup/installation/","title":"Installation","text":""},{"location":"setup/installation/#1-initial-setup","title":"1. Initial Setup","text":"<ol> <li>Download the Plugin</li> <li>Put \"PlotSquared-Bukkit-6.x.jar\" into your plugins folder</li> <li>If you don\u2019t have it installed already, WorldEdit 7.2.x or higher or FAWE is required.</li> <li>If you are updating from a previous major release, such as v3, v4 or v5, read this page first.</li> <li>Reboot the server and PlotSquared will generate all necessary files.</li> </ol> Information <p>Version 6.0.0 and higher require Java 17 to run.</p>"},{"location":"setup/installation/#2-database-configuration","title":"2. Database Configuration","text":"<p>This section explains how to configure PlotSquared database access.</p> <p>PlotSquared allows the database types \"MYSQL\" and \"SQLite\". If you don\u2019t know the difference of both systems you find a short compare at here.</p> Information <p>You can convert to MySQL/SQLite at any time using the /plot database command.</p> <p>Please remember that you can use MySQL or SQLite, but not both at the same time.</p>"},{"location":"setup/installation/#21-database-sqlite","title":"2.1. Database: SQLite","text":"<p>If you don\u2019t have a MySQL database, storage will be automatically set to \"SQLite\" and you may skip this step. (The config file is located at <code>/plugins/PlotSquared/config/storage.yml</code>.)</p>"},{"location":"setup/installation/#22-database-mysql","title":"2.2. Database: MySQL","text":"<p>Enabling MySQL also supports other storage types like MariaDB:</p> <ul> <li> <p>Navigate to /plugins/PlotSquared/config/storage.yml</p> </li> <li> <p>Configure the credentials for your MySQL database.</p> </li> </ul>"},{"location":"setup/installation/#3-plot-setup","title":"3. Plot Setup","text":"<p>You can now create the plotworld or setup single plots in an existing world. To do the latter, head over here.</p>"},{"location":"setup/installation/#31-setup-for-a-default-world","title":"3.1. Setup for a default world","text":"<p>If you don\u2019t need a vanilla world you can set up the default world as a plotworld.</p> <ol> <li>(Stop your server and) delete the vanilla worlds <code>world</code>, <code>world_nether</code> and <code>world_the_end</code> like selected below:</li> </ol> <p></p> <ol> <li> <p>Then, open the file called <code>server.properties</code>; this is located in your server\u2019s root folder. </p> <ul> <li>Find the following line:      <pre><code>level-name=world\n</code></pre></li> </ul> </li> <li> <p>Edit the bukkit.yml:</p> <ul> <li>Open the file called <code>bukkit.yml</code> (it\u2019s also stored in your server\u2019s root folder). Now we need to tell the server which generator based on the world should be generated, otherwise your world generation will be messed up. <pre><code>worlds:\nplotworld:\ngenerator: PlotSquared\n</code></pre></li> </ul> </li> <li> <p>Then you can follow the next steps.</p> </li> </ol>"},{"location":"setup/installation/#4-creation-via-plot-setup","title":"4. Creation via Plot Setup","text":"<p>You can create a plotworld using the setup wizard. Use <code>/plot setup</code> to start the wizard. Every step requires the command, e.g. <code>/plot setup PlotSquared</code> and replace \"PlotSquared\" with your desired value. When you are done, PlotSquared will teleport you to the generated plotworld.</p>"},{"location":"setup/installation/#41-creation-via-third-parties","title":"4.1. Creation via third parties","text":""},{"location":"setup/installation/#411-creation-via-hyperverse-experimental","title":"4.1.1. Creation via Hyperverse - Experimental","text":"<p>Hyperverse will (in most cases) automatically detect your plotworld as it is being generated by PlotSquared. If it doesn\u2019t, you can use <code>/hv import &lt;worldname&gt; PlotSquared</code> to import it.</p>"},{"location":"setup/installation/#412-creation-via-multiverse-deprecated-not-recommended","title":"4.1.2. Creation via Multiverse - Deprecated &amp; Not Recommended","text":"<p>If you use the plugin Multiverse you can create a world using the command <code>/mv create &lt;worldname&gt; normal -g PlotSquared</code>.</p> Information <p>Now you can edit the <code>/plugins/Multiverse-Core/worlds.yml</code> to change the default world options such as \"pvp\", \"respawnWorld\", \"spawning\" and etc.</p>"},{"location":"setup/installation/#5-manually-switching-the-generator-set-in-the-bukkityml-optional","title":"5. Manually Switching The Generator Set in the Bukkit.yml (optional)","text":"<p>Sometimes PlotSquared will be unable to switch the generators for your plotworlds. If this is the case, you will need to manually switch the generator over while the server is stopped.</p> <p>Open the <code>bukkit.yml</code> file (located in your server\u2019s root folder) and change the generator while the server is stopped using the following format: <pre><code>worlds:\nplotworld:\ngenerator: PlotSquared\n</code></pre> Replace <code>plotworld</code> with the name of your plotworld. (Help-Page of bukkit)</p>"},{"location":"setup/installation/#6-adding-road-schematic-optional","title":"6. Adding Road Schematic (optional)","text":"<p>Road schematics can be added after world generation. You are able to change the road schematic whenever you want, however, this will only affect newly generation regions and does not change previously generated regions. You can run <code>/plot regenallroads</code> in order to manually change already-generated roads.</p> <p>First you want to build a road surrounding your plot. The road includes the walls, the plot border and the full intersection. Therefore you have to build over the intersections as well, we recommend going 3 or 4 blocks ahead. Advanced note: PlotSquared does only take two sides of the road into consideration when doing the road creation, because, you likely already figured, roads are squares too around the square plots. Mathematical wise you only need to know 1 side\u2019s dimension to construct a square, however, PlotSquared takes up to two sides into consideration allowing you up to two different patterns.</p> Information <p>Currently, you need a symmetrical border construction for the schematic. Otherwise you get construction mistakes.</p> <p>Here is a link of the parts of a road schematic you have to create. The pink parts are just a recommendation, but the past has shown us that it\u2019s good to add them before creating the road schematic:</p> <p></p> <p>Once you have created the road, stand in the plot and execute the following command:</p> <p><code>/plot createroadschematic</code></p> <p>Road schematics are stored in plugins/PlotSquared/schematics/GEN_ROAD_SCHEMATIC/<code>worldname</code>. Once road schematic has been created it can be copied to a new <code>worldname</code> folder in this directory, providing the schematic for generating a new world.</p> <p>To test the schematic (recommended), stand in another plot that was not used to create the schematic. The following will regenerate the road for the plot you are standing in:</p> <p><code>/plot debugroadregen plot</code></p> <p>If all is well, you can begin regenerating the roads in the entire map. Open up your console and execute the following command (this may take a while and may cause lag spikes):</p> <p><code>/plot regenallroads &lt;world&gt; [height]</code></p> <ul> <li>The height option, if specified, changes the amount of air to paste above the schematic.</li> </ul> <p>Another way: you stop the server and delete the world-chunks. With the restart the new generated chunks follow your plotworld setup.</p>"},{"location":"setup/installation/#7-adding-plot-schematics-optional","title":"7. Adding Plot-Schematics (optional)","text":""},{"location":"setup/installation/#71-plot-schematic-on-generation","title":"7.1. Plot Schematic on Generation","text":"<p>Allow to generate a plotworld with a custom schematic in all plots.</p> <p>Instruction: here</p>"},{"location":"setup/installation/#72-plot-schematic-on-claim","title":"7.2. Plot Schematic on Claim","text":"<p>The player get a custom plot schematic with a claim. If you wish, the player can define a plot-schematic with the claim-command. Instruction: here</p>"},{"location":"setup/migrating-from-an-older-major-release/","title":"Migrating from an older major release","text":"<p>If you are using PlotSqaured version 4 or older, please read the following steps carefully in order to upgrade successfully to v5 or newer. Keep in mind you need to update additional dependencies, such as WorldEdit, Fawe or the server itself as well while updating PlotSquared in order to let P2 function properly. Each major release contains its own migration handler, PlotSquared will attempt to upgrade its own files. Schematics can\u2019t be updated and need to be redone.</p> <ul> <li>Migrating from PlotMe:</li> <li>Migrating from PlotSquared v3:</li> <li>Migrating from PlotSquared v4:</li> <li>Migrating from PlotSquared v5:</li> </ul>"},{"location":"setup/migrating-from-an-older-major-release/#11-migrating-from-plotme","title":"1.1. Migrating from PlotMe:","text":"<ol> <li>Get the latest PlotMe version from here. The zip contains 3 jars, but you need <code>PlotMe-Core.jar</code> only. Replace your current PlotMe version with the latest one.</li> <li>Launch your server with the latest PlotMe version, check the log to ensure no errors (no errors means no errors by any plugin!!) occur so you can start the migration.</li> <li>Get the latest PlotSquared v3 from here. Replace PlotMe with PlotSquared v3 and launch the server, ensure there are no errors or warnings and shut it down again.</li> <li>Get the latest PlotSquared v4 from here. Replace PlotSquared v3 with v4 and launch the server. Ensure there are no errors or warnings and shut it down again. If you encounter errors or warnings read them carefully and do what they tell you to do. Ignoring them can lead to further issues down the line. You may need to revisit <code>/plugins/PlotSquared/settings/worlds.yml</code> and perform material updates yourself. Versions prior to v5 weren\u2019t very smart in that aspect. Click here for an up to date list of valid material names.</li> <li>Get the latest PlotSquared v5 from here. Replace PlotSquared v4 with v5 and launch the server. Same procedure here, check your log and ensure no warnings or errors occur.</li> </ol> <p>That\u2019s it. The conversion is done.</p>"},{"location":"setup/migrating-from-an-older-major-release/#12-migrating-from-plotsquared-v3","title":"1.2. Migrating from PlotSquared v3:","text":"<ol> <li>Get the latest PlotSquared v3 from here. Replace your current version with PlotSquared v3 and launch the server, ensure there are no errors or warnings and shut it down again.</li> <li>Get the latest PlotSquared v4 from here. Replace PlotSquared v3 with v4 and launch the server. Ensure there are no errors or warnings and shut it down again. If you encounter errors or warnings read them carefully and do what they tell you to do. Ignoring them can lead to further issues down the line. You may need to revisit <code>/plugins/PlotSquared/settings/worlds.yml</code> and perform material updates yourself. Versions prior to v5 weren\u2019t very smart in that aspect. Click here for an up to date list of valid material names.</li> <li>Get the latest PlotSquared v5 from here. Replace PlotSquared v4 with v5 and launch the server. Same procedure here, check your log and ensure no warnings or errors occur.</li> </ol> <p>That\u2019s it. The conversion is done.</p>"},{"location":"setup/migrating-from-an-older-major-release/#13-migrating-from-plotsquared-v4","title":"1.3. Migrating from PlotSquared v4:","text":"<ol> <li>Get the latest PlotSquared v4 from here. Replace your current version with v4 and launch the server. Ensure there are no errors or warnings and shut it down again. If you encounter errors or warnings read them carefully and do what they tell you to do. Ignoring them can lead to further issues down the line.</li> <li>Get the latest PlotSquared v5 from here. Replace PlotSquared v4 with v5 and launch the server. Same procedure here, check your log and ensure no warnings or errors occur. You may need to revisit <code>/plugins/PlotSquared/settings/worlds.yml</code> and perform material updates yourself. Versions prior to v5 weren\u2019t very smart in that aspect. Click here for an up to date list of valid material names. Visit the article Updating from 1.12 to 1.13 for further instructions.</li> </ol> <p>That\u2019s it. The conversion is done.</p>"},{"location":"setup/migrating-from-an-older-major-release/#14-migrating-from-plotsquared-v5","title":"1.4. Migrating from PlotSquared v5:","text":"<ol> <li>Get the latest PlotSquared v5 from here. Replace your current version with v5 and launch the server. Ensure there are no errors or warnings and shut it down again. If you encounter errors or warnings read them carefully and do what they tell you to do. Ignoring them can lead to further issues down the line.</li> <li>Get the latest PlotSquared v6 from here. Replace PlotSquared v5 with v6 and launch the server. Same procedure here, check your log and ensure no warnings or errors occur. Read over the Changelog for v6 carefully to make sure you don\u2019t forgot manual updates down the line.</li> </ol> <p>That\u2019s it. The conversion is done.</p>"},{"location":"setup/updating-from-1.12-to-1.13/","title":"Updating from 1.12 to 1.13","text":"<p>If you are updating to 1.13 you might have to manually change some things.</p> <p>PlotSquared will attempt to convert your <code>worlds.yml</code> configuration file on startup. After that has been done, you should review the file to see that everything has converted properly.</p> <p>Please note that PlotSquared for 1.13 only supports Bukkit at the moment.</p>"},{"location":"setup/updating-from-1.12-to-1.13/#schematics","title":"Schematics","text":"<p>PlotSquared will not update your schematics, so you might have to do that manually. The new version of PlotSquared introduced a format for configuring blocks for the different plot components. You can read more about that here. This change allows you to use multiple block types in every plot component.</p>"},{"location":"setup/updating-from-1.12-to-1.13/#dependencies","title":"Dependencies","text":"<p>PlotSquared now depends on WorldEdit or FastAsyncWorldEdit, so you will need to have that installed on the server in order to use PlotSquared.</p>"}]}